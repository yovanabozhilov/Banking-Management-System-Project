@using System.Globalization
@using BankingManagmentApp.Utilities
@model BankingManagmentApp.ViewModels.ProfileVm

@{
    ViewData["Title"] = "My Profile";
    ViewData["BodyClass"] = "profile-full-bg";
    var bg = CultureInfo.GetCultureInfo("bg-BG");

    string Initials(string first, string last)
    {
        var f = string.IsNullOrWhiteSpace(first) ? "" : first.Trim()[0].ToString().ToUpper();
        var l = string.IsNullOrWhiteSpace(last) ? "" : last.Trim()[0].ToString().ToUpper();
        return (f + l);
    }
}

<link rel="stylesheet" href="~/css/main-page.css" asp-append-version="true" />
<link rel="stylesheet" href="~/css/profile.css" asp-append-version="true" />

@functions {
    string RiskLabel(int lvl) => lvl switch
    {
        1 => "Low",
        2 => "Medium",
        3 => "High",
        _ => "Very high"
    };

    string RiskBadgeClass(int lvl) => lvl switch
    {
        1 => "bg-success",
        2 => "bg-warning text-dark",
        3 => "bg-danger",
        _ => "bg-dark"
    };

    string LoanStatusBadgeClass(string? s)
    {
        var st = s?.ToLower();
        return st switch
        {
            "approved" or "autoapproved" => "bg-success",
            "pending" or "pendingreview" => "bg-warning text-dark",
            "declined" or "autodeclined" => "bg-danger",
            _ => "bg-secondary"
        };
    }

    string ShortId(string id)
    {
        if (string.IsNullOrEmpty(id)) return "-";
        return id.Length <= 12 ? id : id.Substring(0, 8) + "â€¦" + id.Substring(id.Length - 4);
    }
}

<div class="container-profile">

    <!-- HEADER -->
    <div class="card shadow-sm profile-section profile-header-card">
        <div class="card-body d-flex align-items-center flex-wrap gap-3">
            <div class="avatar-circle fancy-avatar">
                <span>@Initials(Model.User.FirstName, Model.User.LastName)</span>
            </div>

            <div class="flex-grow-1 min-w-0">
                <div class="d-flex align-items-center justify-content-between flex-wrap gap-2">
                    <div class="min-w-0">
                        <h4 class="mb-1 fw-bold text-gradient">
                            @Model.User.FirstName @Model.User.LastName
                        </h4>
                        <div class="small text-muted">
                            <i class="fas fa-envelope me-1"></i>@Model.User.Email &nbsp;|&nbsp;
                            <i class="fas fa-phone me-1"></i>@Model.User.PhoneNumber &nbsp;|&nbsp;
                            <i class="fas fa-map-marker-alt me-1"></i>@Model.User.Address
                        </div>
                        <div class="xsmall text-muted mt-1">
                            <i class="fas fa-calendar-alt me-1"></i>
                            Created on: @Model.User.CreateAt.ToString("dd.MM.yyyy HH:mm")
                        </div>
                    </div>

                    <div class="text-nowrap">
                        <a class="btn btn-sm btn-gradient" asp-area="Identity" asp-page="/Account/Manage/Index">
                            <i class="fas fa-user-shield me-1"></i> Manage security
                        </a>
                    </div>
                </div>

                <div class="mt-3 d-flex flex-wrap gap-2">
                    @{
                        var totals = Model.Accounts
                            .GroupBy(a => a.Currency)
                            .Select(g => new { Currency = g.Key, Sum = g.Sum(x => x.Balance) })
                            .OrderBy(x => x.Currency)
                            .ToList();

                        if (totals.Any())
                        {
                            foreach (var t in totals)
                            {
                                <span class="chip-balance">
                                    <i class="fas fa-wallet me-1"></i>
                                    @t.Currency&nbsp;@t.Sum.ToString("N2", bg)
                                </span>
                            }
                        }
                        else
                        {
                            <span class="text-muted small">No accounts yet.</span>
                        }
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- ACCOUNTS -->
    <div class="card shadow-sm profile-section">
        <div class="card-header d-flex align-items-center justify-content-between">
            <strong><i class="fas fa-wallet me-2"></i>Accounts</strong>
            <span class="text-muted small">@Model.Accounts.Count account(s)</span>
        </div>

        <div class="card-body p-0">
            @if (!Model.Accounts.Any())
            {
                <div class="p-3 text-muted">You have no accounts.</div>
            }
            else
            {
                <div class="p-3">
                    <div class="row g-3">
                        @foreach (var a in Model.Accounts.Where(x => string.Equals(x.Status, "Active", StringComparison.OrdinalIgnoreCase)))
                        {
                            <div class="col-12 col-md-6">
                                <div class="account-card account-card-purple h-100">
                                    <div class="d-flex justify-content-between align-items-start">
                                        <div>
                                            <div class="iban d-flex align-items-center gap-2">
                                                <span>@a.IBAN.MaskIban()</span>
                                                <button type="button" class="btn btn-sm btn-outline-light" data-copy-iban="@a.IBAN">
                                                    Copy IBAN
                                                </button>
                                            </div>
                                            <div class="xsmall text-light">
                                                Opened: @a.CreateAt.ToString("dd.MM.yyyy")
                                            </div>
                                        </div>
                                        <span class="badge rounded-pill chip-accent bg-white text-purple fw-semibold">
                                            @a.AccountType
                                        </span>
                                    </div>

                                    <div class="balance mt-3 text-white fancy-balance">
                                        <div class="amount text-mono fs-5">@a.Balance.ToString("N2", bg)</div>
                                        <div class="currency text-light">@a.Currency</div>
                                    </div>

                                    <div class="d-flex justify-content-between align-items-center mt-3 gap-2">
                                        <span class="status-pill @(a.Status?.ToLower() == "active" ? "status-active" : "status-inactive")">
                                            @a.Status
                                        </span>

                                        <div class="ms-auto d-flex gap-2">
                                            <a class="btn btn-sm btn-block-card d-inline-flex align-items-center gap-1"
                                               asp-controller="Accounts" asp-action="Delete" asp-route-id="@a.Id"
                                               title="Block this card">
                                                <i class="fas fa-shield-alt"></i><span>Block</span>
                                            </a>

                                            <a class="btn btn-sm btn-export-card" asp-controller="Profile"
                                               asp-action="ExportAccounts" asp-route-accountId="@a.Id">
                                                Export CSV
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>

                    <div class="text-nowrap w-100 mt-3">
                        <a class="btn btn-sm btn-gradient w-100 d-inline-flex align-items-center justify-content-center gap-2"
                           asp-area="" asp-controller="Accounts" asp-action="Create">
                            <i class="fas fa-plus-circle"></i> New Card
                        </a>
                    </div>
                </div>
            }
        </div>
    </div>

    <!-- TRANSACTIONS -->
    <div class="card shadow-sm profile-section transactions-card">
        <div class="card-header d-flex align-items-center justify-content-between flex-wrap gap-2">
            <strong><i class="fas fa-exchange-alt me-2"></i>Transactions</strong>
        </div>

        <div class="card-body p-0">
            <div class="tx-inner">

            @{
                var qs = ViewContext?.HttpContext?.Request?.Query;
                var selectedAccountId = qs?["accountId"].ToString();
                var qsFrom = qs?["from"].ToString();
                var qsTo = qs?["to"].ToString();
                var qsQ = qs?["q"].ToString();
                var qsType = qs?["type"].ToString();

                bool hasFilter =
                    !string.IsNullOrEmpty(selectedAccountId) ||
                    !string.IsNullOrEmpty(qsFrom) ||
                    !string.IsNullOrEmpty(qsTo) ||
                    !string.IsNullOrEmpty(qsQ) ||
                    !string.IsNullOrEmpty(qsType);

                var itemsToRender = hasFilter
                    ? Model.TransactionType
                    : (Model.TransactionType?.Any() == true ? Model.TransactionType : Model.LastTransactions);
            }

            @if (Model.Accounts.Any())
            {
                <form method="get" class="filters-condensed mb-2 w-100">
                    <div class="d-flex flex-wrap align-items-end gap-2">
                        <div>
                            <label class="form-label xsmall mb-1">Account</label>
                            <select name="accountId" class="form-select form-select-sm compact-input">
                                <option value="" selected="@(string.IsNullOrEmpty(selectedAccountId) ? "selected" : null)">All</option>
                                @foreach (var a in Model.Accounts)
                                {
                                    var isSelected = selectedAccountId == a.Id.ToString();
                                    <option value="@a.Id" selected="@(isSelected ? "selected" : null)">
                                        @a.IBAN.MaskIban() (@a.Currency)
                                    </option>
                                }
                            </select>
                        </div>

                        <div>
                            <label class="form-label xsmall mb-1">From</label>
                            <input type="date" name="from" class="form-control form-control-sm compact-input" value="@qsFrom" />
                        </div>

                        <div>
                            <label class="form-label xsmall mb-1">To</label>
                            <input type="date" name="to" class="form-control form-control-sm compact-input" value="@qsTo" />
                        </div>

                        <div class="flex-grow-1" style="min-width:180px;">
                            <label class="form-label xsmall mb-1">Description</label>
                            <input type="text" name="q" class="form-control form-control-sm compact-input"
                                   placeholder="Contains..." value="@qsQ" />
                        </div>

                        <div>
                            <label class="form-label xsmall mb-1">Transaction Type</label>
                            <select name="type" class="form-select form-select-sm compact-input">
                                <option value="" selected="@(string.IsNullOrEmpty(qsType) ? "selected" : null)">All types</option>
                                @foreach (var type in Model.AvailableTransactionTypes)
                                {
                                    <option value="@type" selected="@(qsType == type ? "selected" : null)">@type</option>
                                }
                            </select>
                        </div>

                        <div class="ms-auto d-flex gap-2 flex-wrap">
                            <button type="submit"
                                    class="btn btn-sm btn-gradient d-inline-flex align-items-center gap-1"
                                    formaction="@Url.Action("SearchTransactions", "Profile")"
                                    title="Search transactions">
                                <i class="fas fa-search"></i><span>Search</span>
                            </button>

                            <a class="btn btn-sm btn-gradient d-inline-flex align-items-center gap-1"
                               asp-controller="Profile" asp-action="Index"
                               title="Clear filters">
                                <i class="fas fa-eraser"></i><span>Clear</span>
                            </a>
                        </div>
                    </div>
                </form>
            }

            @if (itemsToRender == null || !itemsToRender.Any())
            {
                <div class="text-muted">
                    @(hasFilter ? "No transactions match your filters." : "You have no transactions.")
                </div>
            }
            else
            {
                <div class="table-responsive rounded-3 overflow-hidden">
                    <table class="table table-compact table-striped table-hover align-middle mb-0 w-100 table-bordered transactions-table">
                        <thead class="table-light sticky-top">
                            <tr>
                                <th class="nowrap">Client ID</th>
                                <th class="nowrap">IBAN</th>
                                <th class="nowrap">Date</th>
                                <th class="nowrap">Type</th>
                                <th class="text-end nowrap">Amount</th>
                                <th class="desc">Description</th>
                                <th class="nowrap">Ref.</th>
                            </tr>
                        </thead>
                        <tbody>
                        @foreach (var t in itemsToRender)
                        {
                            var isDebit = string.Equals(t.TransactionType, "Debit", StringComparison.OrdinalIgnoreCase);
                            var customerId = t.Accounts?.CustomerId ?? "";
                            var iban = t.Accounts?.IBAN ?? "";

                            <tr class="transaction-row">
                                <td class="text-mono nowrap">
                                    @if (!string.IsNullOrEmpty(customerId))
                                    {
                                        <span title="@customerId">@ShortId(customerId)</span>
                                        <button type="button"
                                                class="btn btn-link p-0 ms-1 align-baseline copy-id-btn"
                                                data-copy-id="@customerId"
                                                title="Copy Customer ID" aria-label="Copy Customer ID">
                                            <i class="fas fa-copy"></i>
                                        </button>
                                    }
                                    else { <span class="text-muted">-</span> }
                                </td>

                                <td class="nowrap">
                                    @if (!string.IsNullOrEmpty(iban))
                                    {
                                        <span title="@iban">@iban.MaskIban()</span>
                                        <button type="button"
                                                class="btn btn-link p-0 ms-1 align-baseline copy-id-btn"
                                                data-copy-iban="@iban"
                                                title="Copy IBAN" aria-label="Copy IBAN">
                                            <i class="fas fa-copy"></i>
                                        </button>
                                    }
                                    else { <span class="text-muted">-</span> }
                                </td>

                                <td class="nowrap">@t.Date.ToString("dd.MM.yyyy")</td>
                                <td>
                                    <span class="badge @(isDebit ? "bg-danger" : "bg-success")">@t.TransactionType</span>
                                </td>
                                <td class="text-end text-mono @(isDebit ? "amount-negative" : "amount-positive")">
                                    @(isDebit ? "-" : "+")@t.Amount.ToString("N2", bg)
                                </td>
                                <td class="desc text-break">@t.Description</td>
                                <td class="nowrap">@t.ReferenceNumber</td>
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>
            }

            <div class="d-flex align-items-center justify-content-between flex-wrap gap-2 mt-2">
                <a class="btn btn-sm btn-gradient d-inline-flex align-items-center gap-2"
                   asp-area="" asp-controller="Transactions" asp-action="Create">
                    <i class="fas fa-plus-circle"></i> New Transaction
                </a>

                <div class="ms-auto d-flex gap-2">
                    <a class="btn btn-sm btn-gradient d-inline-flex align-items-center gap-1"
                       title="Export filtered transactions to CSV"
                       href="@Url.Action("ExportTransactions", "Profile", new { accountId = selectedAccountId, from = qsFrom, to = qsTo, q = qsQ, type = qsType })">
                        <i class="fas fa-file-csv"></i><span>Export CSV</span>
                    </a>
                    <a class="btn btn-sm btn-gradient d-inline-flex align-items-center gap-1"
                       title="Export filtered transactions to PDF"
                       href="@Url.Action("ExportTransactionsPdf", "Profile", new { accountId = selectedAccountId, from = qsFrom, to = qsTo, q = qsQ, type = qsType })">
                        <i class="fas fa-file-pdf"></i><span>Export PDF</span>
                    </a>
                </div>
            </div>

            </div> 
        </div>
    </div>

    <!-- LOANS -->
    <div class="card shadow-sm profile-section">
        <div class="card-header d-flex align-items-center justify-content-between">
            <strong><i class="fas fa-hand-holding-usd me-2"></i>Loans</strong>
            <span class="text-muted small">@Model.Loans.Count loan(s)</span>
        </div>

        <div class="card-body p-0">
            @if (!Model.Loans.Any())
            {
                <div class="p-3 text-muted">You have no active loans.</div>
            }
            else
            {
                <div class="p-3">
                    <div class="table-responsive rounded-3 overflow-hidden">
                        <table class="table table-compact table-striped table-hover align-middle mb-0 w-100 table-bordered loans-table">
                            <thead class="table-light sticky-top">
                                <tr>
                                    <th class="nowrap">Borrower</th>
                                    <th class="nowrap">Borrower ID</th>
                                    <th class="nowrap">Loan ID</th>
                                    <th class="nowrap">Type</th>
                                    <th class="text-end nowrap">Approved</th>
                                    <th class="nowrap">Status</th>
                                    <th class="nowrap">Term</th>
                                    <th class="nowrap">Approved on</th>
                                    <th class="text-end nowrap">Contract</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var l in Model.Loans)
                                {
                                    var st = l.Status?.ToLower();
                                    var isApproved = st == "approved" || st == "autoapproved";
                                    <tr>
                                        <td class="nowrap">
                                            @(l.Customer != null ? $"{l.Customer.FirstName} {l.Customer.LastName}" : "â€”")
                                        </td>
                                        <td class="text-mono nowrap">
                                            <span title="@l.CustomerId">@ShortId(l.CustomerId)</span>
                                            <button type="button"
                                                    class="btn btn-link p-0 ms-1 align-baseline copy-id-btn"
                                                    data-copy-id="@l.CustomerId"
                                                    title="Copy borrower ID" aria-label="Copy borrower ID">
                                                <i class="fas fa-copy"></i>
                                            </button>
                                        </td>
                                        <td class="text-mono nowrap">@l.Id</td>
                                        <td class="nowrap">@l.Type</td>
                                        <td class="text-end text-mono">
                                            @(isApproved ? l.ApprovedAmount.ToString("N2", bg) : "-")
                                        </td>
                                        <td class="nowrap">
                                            <span class="badge badge-tight @LoanStatusBadgeClass(l.Status)">@l.Status</span>
                                        </td>
                                        <td class="nowrap">@l.Term.ToString("dd.MM.yyyy")</td>
                                        <td class="nowrap">@(isApproved ? l.ApprovalDate.ToString("dd.MM.yyyy") : "-")</td>
                                        <td class="text-end">
                                            @if (isApproved)
                                            {
                                                <a class="btn btn-sm btn-gradient"
                                                   asp-controller="Loans" asp-action="DownloadContract" asp-route-id="@l.Id"
                                                   title="Download contract" aria-label="Download contract">
                                                    <i class="fas fa-download me-1" aria-hidden="true"></i> Download
                                                </a>
                                            }
                                            else
                                            {
                                                <span class="text-muted xsmall">N/A</span>
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            }
        </div>

        @if (Model.Credit is not null)
        {
            <div class="card-footer py-2">
                <div class="d-flex align-items-center justify-content-between flex-wrap gap-2">
                    <div>
                        <strong>Credit score:</strong> @Model.Credit.CreditScore
                        &nbsp;â€¢&nbsp;<strong>Risk:</strong>
                        <span class="badge @RiskBadgeClass(Model.Credit.RiskLevel)">@RiskLabel(Model.Credit.RiskLevel)</span>
                    </div>
                </div>

                <div class="credit-info-glass mt-2 note-compact">
                    <div class="note-text">@Model.Credit.Notes</div>
                    <i class="fas fa-info-circle note-icon"></i>
                </div>
            </div>
        }
        else
        {
            <div class="card-footer py-3">
                <div class="credit-info-glass">
                    <i class="fas fa-info-circle me-2"></i>
                    @(Model.CreditInfoMessage ?? (ViewBag.CreditInfo as string) ?? "Credit score is not available yet. Weâ€™ll show it once we have enough real activity.")
                </div>
            </div>
        }

        <div class="text-nowrap px-3 py-2">
            <a class="btn btn-sm btn-gradient w-100 d-inline-flex align-items-center justify-content-center gap-2"
               asp-area="" asp-controller="Loans" asp-action="Apply">
                <i class="fas fa-plus-circle"></i> Apply for credit
            </a>
        </div>
    </div>

    <!-- UPCOMING REPAYMENTS -->
    <div class="card shadow-sm profile-section repayments-card">
        <div class="card-header d-flex align-items-center justify-content-between repayments-header">
            <strong><i class="fas fa-calendar-alt me-2"></i>Upcoming repayments</strong>
            <span class="text-muted small">@Model.UpcomingRepayments.Count item(s)</span>
        </div>

        <div class="card-body p-0">
            @if (!Model.UpcomingRepayments.Any())
            {
                <div class="p-3 text-muted text-center">No scheduled repayments.</div>
            }
            else
            {
                <div class="p-3">
                    <div class="table-responsive rounded-3 overflow-hidden">
                        <table class="table table-compact table-striped table-hover align-middle mb-0 repayments-table table-bordered">
                            <thead class="table-light sticky-top">
                                <tr>
                                    <th class="nowrap">Borrower</th>
                                    <th class="nowrap">Borrower ID</th>
                                    <th class="nowrap">Loan ID</th>
                                    <th class="nowrap">Due</th>
                                    <th class="text-end nowrap">Due amount</th>
                                    <th class="text-end nowrap">Paid</th>
                                    <th>Status</th>
                                    <th class="text-end nowrap">Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var r in Model.UpcomingRepayments)
                                {
                                    var statusLower = r.Status?.ToLower();
                                    var statusClass = statusLower == "paid" ? "bg-success"
                                        : statusLower == "overdue" ? "bg-danger"
                                        : "bg-secondary";

                                    <tr>
                                        <td class="nowrap">
                                            @(r.Loan?.Customer != null
                                                ? $"{r.Loan.Customer.FirstName} {r.Loan.Customer.LastName}"
                                                : "â€”")
                                        </td>
                                        <td class="text-mono nowrap">
                                            @if (!string.IsNullOrEmpty(r.Loan?.CustomerId))
                                            {
                                                <span title="@r.Loan.CustomerId">@ShortId(r.Loan.CustomerId)</span>
                                                <button type="button"
                                                        class="btn btn-link p-0 ms-1 align-baseline copy-id-btn"
                                                        data-copy-id="@r.Loan.CustomerId"
                                                        title="Copy borrower ID" aria-label="Copy borrower ID">
                                                    <i class="fas fa-copy"></i>
                                                </button>
                                            }
                                            else
                                            {
                                                <span class="text-muted">-</span>
                                            }
                                        </td>
                                        <td class="text-mono nowrap">@r.LoanId</td>
                                        <td class="nowrap">@r.DueDate.ToString("dd.MM.yyyy")</td>
                                        <td class="text-end text-mono">@r.AmountDue.ToString("N2", bg)</td>
                                        <td class="text-end text-mono">@r.AmountPaid.ToString("N2", bg)</td>
                                        <td>
                                            <span class="badge status-pill @statusClass">@r.Status</span>
                                        </td>
                                        <td class="text-end">
                                            <form asp-controller="Transactions" asp-action="Pay" method="post" class="m-0"
                                                  onsubmit="return confirmPayment(this)">
                                                <input type="hidden" name="repaymentId" value="@r.Id" />
                                                <input type="hidden" name="Amount" value="@r.AmountDue" />
                                                <button type="submit" class="btn btn-sm btn-gradient d-inline-flex align-items-center"
                                                        title="Pay now" aria-label="Pay now">
                                                    <i class="fas fa-dollar-sign me-1" aria-hidden="true"></i>
                                                    <span>Pay</span>
                                                </button>
                                            </form>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            }
        </div>
    </div>

</div>
