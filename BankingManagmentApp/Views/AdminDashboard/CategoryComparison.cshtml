@model IEnumerable<BankingManagmentApp.ViewModels.CategoryComparisonVm>
@{
    ViewData["Title"] = "Category Comparison";
    ViewData["BodyClass"] = "profile-full-bg"; // optional purple gradient background
}
<link rel="stylesheet" href="~/css/profile.css" asp-append-version="true" />

<div class="profile-page">
    <div class="container-xxl">
        <div class="row justify-content-center">
            <div class="col-12 col-lg-10 col-xl-9">
                <div class="profile-card card shadow-lg border-0">

                    <!-- Header -->
<div class="profile-header d-flex align-items-center gap-3 p-4 border-bottom">
    <div class="profile-badge">
        <i class="fa-solid fa-chart-simple"></i>
    </div>
    <div>
        <h3 class="mb-0">@ViewData["Title"]</h3>
        <small class="opacity-75">Comparison of Expenses/Income by Category</small>
    </div>
    <div class="ms-auto">
        <a asp-controller="Transactions" asp-action="Create" class="btn btn-custom-purple">
            + New Transaction
        </a>
    </div>
</div>


                    <!-- Body -->
                    <div class="card-body p-4 p-md-5">
                        @if (!Model.Any())
                        {
                            <div class="text-muted text-center p-4">No data available for comparison.</div>
                        }
                        else
                        {
                            <div class="table-responsive">
                                <table class="table table-hover table-striped align-middle mb-0">
                                    <thead class="table-light">
                                        <tr>
                                            <th>Category</th>
                                            <th class="text-end">Income</th>
                                            <th class="text-end">Expenses</th>
                                            <th class="text-end">Balance</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model)
                                        {
                                            var balance = item.Income - item.Expense;
                                            <tr>
                                                <td>@item.Category</td>
                                                <td class="text-end text-success fw-semibold">@item.Income.ToString("N2")</td>
                                                <td class="text-end text-danger fw-semibold">@item.Expense.ToString("N2")</td>
                                                <td class="text-end @(balance >= 0 ? "text-success" : "text-danger") fw-bold">@balance.ToString("N2")</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                    </div>

                    <!-- Footer / Chart -->
                    <div class="card-footer bg-white border-top-0">
                        <h6 class="text-center mb-3">Visualization</h6>
                        <canvas id="categoryChart" height="140"></canvas>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const ctx = document.getElementById('categoryChart');
        const chart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(m => m.Category))),
                datasets: [
                    {
                        label: 'Income',
                        data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(m => m.Income))),
                        backgroundColor: 'rgba(25, 135, 84, 0.7)' // bootstrap green
                    },
                    {
                        label: 'Expenses',
                        data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(m => m.Expense))),
                        backgroundColor: 'rgba(220, 53, 69, 0.7)' // bootstrap red
                    }
                ]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                        labels: { font: { size: 13 } }
                    }
                },
                scales: {
                    y: { beginAtZero: true }
                }
            }
        });
    </script>
}
