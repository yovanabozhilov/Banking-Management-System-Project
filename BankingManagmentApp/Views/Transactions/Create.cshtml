@model BankingManagmentApp.Models.Transactions

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Transactions</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" onsubmit="return confirmPayment(this)">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="mb-3">
                <label asp-for="TransactionType" class="form-label">Choose transaction type</label>
                <select asp-for="TransactionType" class="form-select">
                    <option value="">-- Select --</option>
                    <option value="Credit">Credit</option>
                    <option value="Debit">Debit</option>
                </select>
                <span asp-validation-for="TransactionType" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Amount" class="control-label"></label>
                <input asp-for="Amount" class="form-control" />
                <span asp-validation-for="Amount" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                 <button id="confirm" type="submit" class="btn btn-sm btn-primary">Create</button>
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

<script>
    function confirmPayment(form) {
        event.preventDefault(); 
        const amount = form.querySelector("input[name='Amount']").value;
        const description = form.querySelector("input[name='Description']").value;
        Swal.fire({
            title: 'Transaction Confirmation',
            html: `Do you want to confirm this transaction? <br>
                   Amount: <b>${amount} лв.</b> <br>
                   Description: <b>${description}</b>`,
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, confirm',
            cancelButtonText: 'Cancel',
            reverseButtons: true
        }).then((result) => {
            if (result.isConfirmed) {
                form.submit();
            }
        });

        return false;
    }
</script>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
